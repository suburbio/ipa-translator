var SPE, conversion, liaisons;

SPE = /([(0-9)|•|—|–|\-|,|?|!|^|\r|’|°|“|”|...|\u00a0|«|»|…|\\|\/|!|?|\"|\'|\[|\]|\(|\)|\]|<|>|=|+|%|$|&|#|;|*|:|}|{|`])/g;

function parseHashString (str) {
  return str.split('\n').map(function (line) {
    return line.split('#');
  });
}

conversion = parseHashString("^mm#m\n^ix$#iks\n^nn#n\n^où$#u\n^pp#p\n^rr#r\n^ll#l\n^ss#s\n^ciel$#sjɛl\n^tiel$#sjɛl\n^ieux$#jø\n^eux$#ø\n^end$#ɑ̃\n^iser#ize\n^ser$#se\n^gn#nj\n^ciné#sine\n^ant$#ɑ̃\n^er$#e\n^ez$#e\n^tin$#tɛ̃\n^ch$#k\n^aill#aj\n^eill#ɛj\n^ille$#j\n^uë#y\n^oë#oɛ\n^s(?=['ç'])#s\n^ueil#œj\n^aient$#ɛ\n^emment$#amɑ̃\n^ente$#ɑ̃t\n^ment$#mɑ̃\n^ent$#\n^et$#ɛ\n^eau#o\n^ea#a\n^et$#ɛ\n^oin#wɛ̃\n^ouin$#wɛ̃\n^oin$#wɛ̃\n^em(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#ɑ̃\n^ou(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#w\n^eu(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#œ\n^eu$#ø\n^eue$#ø\n^tien$#sjɛ̃\n^tion$#sjɔ̃\n^t(?=['in'])#t\n^ce$#sœ\n^t'#t\n^je$#ʒœ\n^ien#jɛ̃\n^(eur|oeur)$#œr\n^oe#œ\n^(ou|ou$)#u\n^à$#a\n^aise$#ɛz\n^en$#ɑ̃\n^g$#\n^d$#\n^gu(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#gy\n^gu(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#g\n^g(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#g\n^g(?=['o','ô','a','â','u','û'])#g\n^g(?=['e','ë','ê','i','y'])#ʒ\n^ille#ij\n^oi#wa\n^t(?=['i'])#s\n^aine$#ɛn\n^ys#iz\n^an(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#an\n^onn#ɔn\n^on#ɔ̃\n^oin$#wɛ̃\n^t$#\n^p$#\n^(l|ll)#l\n^j'#ʒ\n^h(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#\n^l'#l\n^c'#s\n^sym(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#sɛ̃\n^y(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#i\n^es$#\n^th#t\n^ine$#in\n^ph#f\n^i(?=['a','â','i','o','ô','u','û','è'])#j\n^and$#ɑ̃\n^euse$#øz\n^est$#ɛ\n^s(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#s\n^c(?=['b', 'c', 'd', 'f', 'g', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#k\n^c(?=['a','â','u','û','o','ô'])#k\n^c(?=['e','ë','ê','é','è','y','i','î'])#s\n^ç(?=['a','â','u','û','o','ô'])#s\n^y(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#j\n^en(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#ɑ̃\n^en(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#en\n^e(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z']{2})#ɛ\n^e(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z']{1})#œ\n^an(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#an\n^qu#k\n^eu$#œ\n^ouai#wɛ\n^ouet#wɛ\n^ch(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#k\n^in#ɛ̃\n^ou(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#w\n^ain#ɛ̃\n^ein#ɛ̃\n^ei#ɛ\n^er$#e\n^eu$#ø\n^gno#gno\n^hou#u\n^in$#ɛ̃\n^un$#œ̃\n^ai#ɛ\n^an#ɑ̃\n^au#o\n^ce$#s\n^ce#sɛ\n^ch(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#ʃ\n^eu#œ\n^ff#f\n^imm#im\n^im#ɛ̃\n^on(?=[\"a\",\"â\",\"e\",\"ë\",\"ê\",\"i\",\"o\",\"ô\",\"u\",\"û\",\"û\",\"y\",\"é\",\"è\",\"â\",\"à\",\"ï\",\"î\",\"ë\",\"û\",\"ù\",\"ê\"])#on\n^on(?=['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'])#ɔ̃\n^om(?=['b'])#ɔ̃\n^oû#u\n^s(?=.)#s\n^s$#\n^sh#ʃ\n^s#z\n^t$#\n^e$#\n^tt#t\n^ui#µi\n^x$#\n^x#ks\n^ça#sa\n^a#a\n^b#b\n^d#d\n^f#f\n^g#ʒ\n^i#i\n^j#ʒ\n^k#k\n^m#m\n^n#n\n^o#ɔ\n^p#p\n^r#r\n^t#t\n^u#y\n^v#v\n^w#w\n^z#z\n^â#a\n^è#ɛ\n^é#e\n^î#i\n^ï#i\n^ô#o\n^ö#o\n^c$#k\n^é#e\n^è#ɛ\n^ê#ɛ\n^ë#œ\n^û#y\n^à#a\n^h#\n^y#i");
liaisons = parseHashString("^s(?=['ɛ','ø','ɑ','ϵ','i','a','o','ɔ','σ','y','u','œ','π','e','µ','w'])#z\n^x(?=['ɛ','ø','ɑ','ϵ','i','a','o','ɔ','σ','y','u','œ','π','e','µ','w'])#z\n^p(?=['ɛ','ø','ɑ','ϵ','i','a','o','ɔ','σ','y','u','œ','π','e','µ','w'])#p\n^n(?=['ɛ','ø','ɑ','ϵ','i','a','o','ɔ','σ','y','u','œ','π','e','µ','w'])#n\n^r(?=['ɛ','ø','ɑ','ϵ','i','a','o','ɔ','σ','y','u','œ','π','e','µ','w'])#r");

function selectFirst (text, array) {
  return array.filter(function (a) {
    return RegExp(a[0]).test(text);
  })[0];
}

function getLiaison (text, ipa) {
  text.forEach(function (mot, id) {
    var next_ipa = ipa[id + 1];
    if (next_ipa) {
      var lien = mot.slice(-1) + next_ipa.slice(0, 1);
      var match = selectFirst(lien, liaisons);
      if (match) {
        ipa[id + 1] = match[1] + next_ipa;
        // ipa[id] += match[1] + '‿';
      }
    }
  });
  return ipa;
}
